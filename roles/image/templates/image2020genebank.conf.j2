##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# the django-channels component
upstream channels-backend {
    server localhost:28001;
}

# Default server configuration
# redirect all non-www request to www
server {
    listen       80;
    listen       [::]:80;
    server_name  {{ domain_name }};
    return       307 http://{{ image_server_name }}$request_uri;
}


# web portal server
server {
  listen 80;
  listen [::]:80;

  # SSL configuration for data portal

  # this is the default root directory. /usr/share/nginx/html will contain
  # accessory files, like image_maintenance or robots.txt that are not stored
  # in the same site location
  root /var/www/html;

  # Add index.php to the list if you are using PHP
  index index.html index.htm;

  server_name {{ image_server_name }};

  location / {
    # is required that angular get index.html when no uri is found
    # angular will decide to throw 404 page or show a different page
    try_files $uri $uri/ /index.html;
  }

  # custom error page
  error_page 503 /maintenance.html;

  location = /maintenance.html {
    root /usr/share/nginx/html/;
  }

  # robots.txt location
  location = /robots.txt {
    root /usr/share/nginx/html/;
  }

  # favicon image position
  location = /favicon.ico {
    root /usr/share/nginx/html/;
  }

  # add a trailing slash to image location
  location /image {
    return 307 /image/;
  }

  location /image/ {
    # temporary redirect to another domain
    rewrite /image/(.*) $scheme://{{ injecttool_server_name }}/$1 last;
  }

  location /data_portal/ {
    # set variable in location
    set $my_port 26081;

    # https://stackoverflow.com/a/35553666/4385116
    # grant permission to any site (included data-portal) to see this data
    # https://serverfault.com/questions/162429/how-do-i-add-access-control-allow-origin-in-nginx
    add_header Access-Control-Allow-Origin *;

    # Add info to webpages
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:$my_port;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Port $my_port;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass_header Set-Cookie;

    # Subitting a request to docker service
    proxy_pass http://127.0.0.1:$my_port;
    proxy_redirect http://$host:$my_port/ $scheme://$http_host/;
  }

}


# injecttool server
server {
  listen 80;
  listen [::]:80;

  # SSL configuration for InjectTool

  # this is the default root directory. /usr/share/nginx/html will contain
  # accessory files, like image_maintenance or robots.txt that are not stored
  # in the same site location
  root /var/www/html;

  # Add index.php to the list if you are using PHP
  index index.html index.htm;

  server_name {{ injecttool_server_name }};

  # max upload size
  client_max_body_size 25M;   # adjust to taste

  # custom error page
  error_page 503 /maintenance.html;

  location = /maintenance.html {
    root /usr/share/nginx/html/;
  }

  # robots.txt location
  location = /robots.txt {
    root /usr/share/nginx/html/;
  }

  # favicon image position
  location = /favicon.ico {
    root /usr/share/nginx/html/;
  }

  # Redirect to django-channels
  location /ws/ {
    proxy_pass http://channels-backend/ws/;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
  }

  location / {
    # check if site is under mantainance: if I found this file, I will
    # return a 503 page (defined upper in this configuration file)
    if (-f /usr/share/nginx/html/image_maintenance.html) {
            return 503;
    }

    # set variable in location
    set $my_port 26080;

    # Add info to webpages
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:$my_port;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Port $my_port;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass_header Set-Cookie;

    # Subitting a request to docker service
    proxy_pass http://127.0.0.1:$my_port;
    proxy_redirect http://$host:$my_port/ $scheme://$http_host/;
  }

}
