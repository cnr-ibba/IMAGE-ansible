[DEFAULT]

# email address to receive notifications.
destemail = {{ fail2ban_destemail }}
# the email address from which to send emails.
sender = root@<fq-hostname>
# name on the notification emails.
sendername = Fail2Ban
# email transfer agent to use.
mta = mail

# ignore those ip addresses
ignoreip = {{ fail2ban_ignoreip }}

# see action.d/ufw.conf
actionban = ufw.conf
# see action.d/ufw.conf
actionunban = ufw.conf

[sshd]
enabled = true
# To use more aggressive sshd modes set filter parameter "mode" in jail.local:
# normal (default), ddos, extra or aggressive (combines all).
# See "tests/files/logs/sshd" or "filter.d/sshd.conf" for usage example and details.
mode    = ddos
port    = ssh
logpath = %(sshd_log)s
backend = %(sshd_backend)s

filter = sshd
# the length of time between login attempts for maxretry.
findtime = 12h
# attempts from a single ip before a ban is imposed.
maxretry = 3
# the number of seconds that a host is banned for.
bantime = 1d
# ban & send an e-mail with whois report
# action = %(action_mw)s

# inspired from https://www.digitalocean.com/community/tutorials/how-to-protect-an-nginx-server-with-fail2ban-on-ubuntu-14-04
[nginx-http-auth]
enabled  = true
filter   = nginx-http-auth
port     = http,https
logpath  = %(nginx_error_log)s

[nginx-noscript]
enabled  = true
port     = http,https
filter   = nginx-noscript
logpath  = %(nginx_access_log)s
maxretry = 6

# Ban hosts which agent identifies spammer robots crawling the web
# for email addresses. The mail outputs are buffered.
[nginx-badbots]
enabled  = true
port     = http,https
filter   = nginx-badbots
logpath  = %(nginx_access_log)s
maxretry = 2
bantime  = 48h

[nginx-nohome]
enabled  = true
port     = http,https
filter   = nginx-nohome
logpath  = %(nginx_access_log)s
maxretry = 2

[nginx-noproxy]
enabled  = true
port     = http,https
filter   = nginx-noproxy
logpath  = %(nginx_access_log)s
maxretry = 2

# Protect against HTTP DDOS attack
[nginx-ddos]
enabled = false
port = http,https
filter = nginx-ddos
logpath = %(nginx_access_log)s

# maxretry is how many GETs we can have in the findtime period before getting narky
maxretry = 300
# findtime is the time period in seconds in which we're counting "retries"
findtime = 150
# bantime is how long we should drop incoming GET requests for a given IP
bantime = 300
# action to do
# ban & send an e-mail with whois report and relevant log lines
action = %(action_mwl)s

[nginx-botsearch]
enabled  = true
port     = http,https
logpath  = %(nginx_error_log)s
maxretry = 2

# https://wiki.meurisse.org/wiki/Fail2Ban#Recidive
# Jail for more extended banning of persistent abusers
# !!! WARNINGS !!!
# 1. Make sure that your loglevel specified in fail2ban.conf/.local
#    is not at DEBUG level -- which might then cause fail2ban to fall into
#    an infinite loop constantly feeding itself with non-informative lines
# 2. If you increase bantime, you must increase value of dbpurgeage
#    to maintain entries for failed logins for sufficient amount of time.
#    The default is defined in fail2ban.conf and you can override it in fail2ban.local
[recidive]
enabled  = true
logpath  = /var/log/fail2ban.log
banaction = %(banaction_allports)s
bantime  = 1w
findtime = 1d
maxretry  = 3
protocol  = 0-255
# ban & send an e-mail with whois report
action = %(action_mw)s
